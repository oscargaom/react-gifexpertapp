{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDVyBK,CAAa1B,GAAhCa,EALsB,EAK5BN,KAAca,EALc,EAKdA,QAKrB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAE/CoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEf,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEvBnBkB,EAAe,WAExB,IAF8B,EAGM1C,mBADjB,CAAC,cAFU,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAW9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAf,GAAG,OAEf,kBAAC,EAAD,CAASiC,IAAKjC,EAAKM,SAAUN,UClBrDoC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.32d1aa82.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 0 ) {\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=G5UCe8eDqpqWmL83s4862mmruelyQISQ&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ({title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadein\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFecthGifs } from '../hooks/useFetchGifs'\r\n import { GifGriditem } from './GifGriditem';\r\n// import { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // getGifs();\r\n    const {data: images, loading} = useFecthGifs(category);\r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadein\">{category}</h3>\r\n            {\r\n                loading && <p className=\"animate__animated animate__flash\">Loading...</p>\r\n            }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGriditem \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFecthGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n};","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const categorias = ['One Punch'];\r\n    const [categories, setCategories] = useState(categorias)\r\n\r\n    // const handlerAdd = () => {\r\n    //     console.log(categories);\r\n\r\n    //     // setCategories( cat => [...cat, 'Nuevo']);\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick={ handlerAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( cat => (\r\n                        //  <li key={cat}>{cat}</li>\r\n                        <GifGrid key={cat} category={cat}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GitExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n  \n    <GitExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}